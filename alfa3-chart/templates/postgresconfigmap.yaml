apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-init-scripts
data:
  init.sql: |
    CREATE TABLE IF NOT EXISTS "categoria_escolar" (
      "cat_escola_id" SERIAL NOT NULL,
      "cat_escola_desc" VARCHAR NOT NULL,
      PRIMARY KEY ("cat_escola_id")
    );

    INSERT INTO "categoria_escolar" ("cat_escola_id", "cat_escola_desc") VALUES
      (1, 'Pública'),
      (2, 'Privada');

    CREATE TABLE IF NOT EXISTS "tipo_avaliacao" (
      "tip_aval_id" SERIAL NOT NULL,
      "tip_aval_desc" VARCHAR NOT NULL,
      PRIMARY KEY ("tip_aval_id")
    );

    INSERT INTO "tipo_avaliacao" ("tip_aval_id", "tip_aval_desc") VALUES
      (1, 'Avaliação Diagnóstica'),
      (2, 'Avaliação Formativa de Processo'),
      (3, 'Avaliação Formativa de Saída');

    CREATE TABLE IF NOT EXISTS "tipo_contrato" (
      "tip_contrato_id" SERIAL NOT NULL,
      "tip_contrato_desc" VARCHAR NOT NULL,
      PRIMARY KEY ("tip_contrato_id")
    );

    INSERT INTO "tipo_contrato" ("tip_contrato_id", "tip_contrato_desc") VALUES
      (1, 'Anual'),
      (2, 'Mensal'),
      (3, 'Exclusivo');

    CREATE TABLE IF NOT EXISTS "tipo_escola" (
      "tip_escola_id" SERIAL NOT NULL,
      "tip_escola_desc" VARCHAR NULL DEFAULT NULL,
      PRIMARY KEY ("tip_escola_id")
    );

    INSERT INTO "tipo_escola" ("tip_escola_id", "tip_escola_desc") VALUES
      (1, 'Federal'),
      (2, 'Estadual'),
      (3, 'Municipal');

    CREATE TABLE IF NOT EXISTS "tipo_frase" (
      "tip_frase_id" SERIAL NOT NULL,
      "tip_frase_desc" VARCHAR NOT NULL,
      PRIMARY KEY ("tip_frase_id")
    );

    INSERT INTO "tipo_frase" ("tip_frase_id", "tip_frase_desc") VALUES
      (1, 'Palavras Aleatórias'),
      (2, 'Pseudo Palavras'),
      (3, 'Palavras Simples');

    CREATE TABLE IF NOT EXISTS "frase" (
      "fra_id" SERIAL NOT NULL,
      "fra_frase" VARCHAR(256) NOT NULL,
      "tip_frase" INTEGER NOT NULL,
      PRIMARY KEY ("fra_id"),
      CONSTRAINT "FRASE_Tipo" FOREIGN KEY ("tip_frase") REFERENCES "tipo_frase" ("tip_frase_id") ON UPDATE CASCADE ON DELETE RESTRICT
    );

    INSERT INTO "frase" ("fra_id", "fra_frase", "tip_frase") VALUES
      (1, 'A certeza de inovar de maneira eficaz', 1),
      (2, 'O poder de realizar seus sonhos direto da fonte', 2),
      (3, 'A segurança de conseguir antes de tudo', 2),
      (4, 'A certeza de avançar com força total', 3),
      (5, 'O prazer de inovar em estado puro', 1),
      (6, 'A liberdade de avançar em estado puro', 1),
      (7, 'O prazer de concretizar seus projetos sem preocupação', 1),
      (8, 'A arte de evoluir simplesmente', 3),
      (9, 'O poder de ganhar com toda a tranquilidade', 2),
      (10, 'O prazer de concretizar seus projetos de maneira eficaz', 2);

    CREATE TABLE IF NOT EXISTS "cidade" (
      "cid_id" SERIAL NOT NULL,
      "cid_nome" VARCHAR(255) NOT NULL,
      "cid_uf" VARCHAR(2) NOT NULL,
      "cid_pais" VARCHAR(50) NOT NULL,
      PRIMARY KEY ("cid_id")
    );

    INSERT INTO "cidade" ("cid_id", "cid_nome", "cid_uf", "cid_pais") VALUES
      (1, 'São Paulo', 'SP', 'Brasil'),
      (2, 'Rio de Janeiro', 'RJ', 'Brasil'),
      (3, 'Belo Horizonte', 'MG', 'Brasil'),
      (4, 'Salvador', 'BA', 'Brasil'),
      (5, 'Santa Catarina', 'SC', 'Brasil');

    CREATE TABLE IF NOT EXISTS "endereco" (
      "end_id" SERIAL NOT NULL,
      "end_rua" VARCHAR(255) NOT NULL,
      "end_numero" INTEGER NOT NULL,
      "end_cep" VARCHAR(9) NOT NULL,
      "cid_id" INTEGER NOT NULL,
      PRIMARY KEY ("end_id"),
      CONSTRAINT "endereco_cidade" FOREIGN KEY ("cid_id") REFERENCES "cidade" ("cid_id") ON UPDATE NO ACTION ON DELETE NO ACTION
    );

    INSERT INTO "endereco" ("end_id", "end_rua", "end_numero", "end_cep", "cid_id") VALUES
      (1, 'Rua das Flores', 123, '01000-000', 1),
      (2, 'Avenida dos Bandeirantes', 456, '04500-000', 1),
      (3, 'Rua Copacabana', 234, '22000-000', 2),
      (4, 'Rua Maracanã', 890, '20500-000', 2),
      (5, 'Avenida Afonso Pena', 123, '30130-000', 3),
      (6, 'Rua Pelourinho', 234, '40000-000', 4),
      (7, 'Avenida Beira-Mar', 456, '88050-000', 5);

    CREATE TABLE IF NOT EXISTS "professor" (
      "pro_id" SERIAL NOT NULL,
      "pro_identificador" VARCHAR(256) NOT NULL,
      "pro_primeiro_nome" VARCHAR(255) NOT NULL,
      "pro_segundo_nome" VARCHAR(255) NOT NULL,
      "pro_senha" VARCHAR(256) NOT NULL,
      PRIMARY KEY ("pro_id")
    );

    INSERT INTO "professor" ("pro_id", "pro_identificador", "pro_primeiro_nome", "pro_segundo_nome", "pro_senha") VALUES
      (1, '999.999.999-99', 'Royall', 'Adams', 'gAAAAABkaPztyZ5W2nWs6hW8U4bozfk-Ah4CsoX5AlzmI5-yjoa6eNmkgXNNd1tJRpd9So5CEm1Oquozvz9eGuQQBvIgBKNJlA=='),
      (2, '321.987.654-99', 'Shawna', 'Parslow', 'gAAAAABkaPztyZ5W2nWs6hW8U4bozfk-Ah4CsoX5AlzmI5-yjoa6eNmkgXNNd1tJRpd9So5CEm1Oquozvz9eGuQQBvIgBKNJlA=='),
      (3, '876.543.210-99', 'Blanca', 'Shotton', 'gAAAAABkaPztyZ5W2nWs6hW8U4bozfk-Ah4CsoX5AlzmI5-yjoa6eNmkgXNNd1tJRpd9So5CEm1Oquozvz9eGuQQBvIgBKNJlA=='),
      (4, '321.987.852-99', 'Guillermo', 'Belf', 'gAAAAABkaPztyZ5W2nWs6hW8U4bozfk-Ah4CsoX5AlzmI5-yjoa6eNmkgXNNd1tJRpd9So5CEm1Oquozvz9eGuQQBvIgBKNJlA=='),
      (5, '321.987.896-99', 'Sayre', 'Wisker', 'gAAAAABkaPztyZ5W2nWs6hW8U4bozfk-Ah4CsoX5AlzmI5-yjoa6eNmkgXNNd1tJRpd9So5CEm1Oquozvz9eGuQQBvIgBKNJlA=='),
      (6, '789.012.345-99', 'Melodie', 'Keggins', 'gAAAAABkaPztyZ5W2nWs6hW8U4bozfk-Ah4CsoX5AlzmI5-yjoa6eNmkgXNNd1tJRpd9So5CEm1Oquozvz9eGuQQBvIgBKNJlA=='),
      (7, '234.567.890-99', 'Nicky', 'Ivey', 'gAAAAABkaPztyZ5W2nWs6hW8U4bozfk-Ah4CsoX5AlzmI5-yjoa6eNmkgXNNd1tJRpd9So5CEm1Oquozvz9eGuQQBvIgBKNJlA=='),
      (8, '012.345.678-99', 'Moria', 'Tilliards', 'gAAAAABkaPztyZ5W2nWs6hW8U4bozfk-Ah4CsoX5AlzmI5-yjoa6eNmkgXNNd1tJRpd9So5CEm1Oquozvz9eGuQQBvIgBKNJlA=='),
      (9, '987.654.321-99', 'Jake', 'Austing', 'gAAAAABkaPztyZ5W2nWs6hW8U4bozfk-Ah4CsoX5AlzmI5-yjoa6eNmkgXNNd1tJRpd9So5CEm1Oquozvz9eGuQQBvIgBKNJlA=='),
      (10, '876.548.321-90', 'Joelynn', 'Rodie', 'gAAAAABkaPztyZ5W2nWs6hW8U4bozfk-Ah4CsoX5AlzmI5-yjoa6eNmkgXNNd1tJRpd9So5CEm1Oquozvz9eGuQQBvIgBKNJlA==');

    CREATE TABLE IF NOT EXISTS "gestor_admin" (
      "ges_adm_id" SERIAL NOT NULL,
      "ges_adm_primeiro_nome" VARCHAR(256) NOT NULL,
      "ges_adm_segundo_nome" VARCHAR(256) NOT NULL,
      "ges_adm_senha" VARCHAR(256) NOT NULL,
      PRIMARY KEY ("ges_adm_id")
    );

    INSERT INTO "gestor_admin" ("ges_adm_id", "ges_adm_primeiro_nome", "ges_adm_segundo_nome", "ges_adm_senha") VALUES
      (1, 'Lucas', 'Silva', 'gAAAAABkaPztyZ5W2nWs6hW8U4bozfk-Ah4CsoX5AlzmI5-yjoa6eNmkgXNNd1tJRpd9So5CEm1Oquozvz9eGuQQBvIgBKNJlA=='),
      (2, 'Paula', 'Moraes', 'gAAAAABkaPztyZ5W2nWs6hW8U4bozfk-Ah4CsoX5AlzmI5-yjoa6eNmkgXNNd1tJRpd9So5CEm1Oquozvz9eGuQQBvIgBKNJlA=='),
      (3, 'Cristiano', 'de Paula', 'gAAAAABkaPztyZ5W2nWs6hW8U4bozfk-Ah4CsoX5AlzmI5-yjoa6eNmkgXNNd1tJRpd9So5CEm1Oquozvz9eGuQQBvIgBKNJlA=='),
      (4, 'Sofia', 'Magalhães', 'gAAAAABkaPztyZ5W2nWs6hW8U4bozfk-Ah4CsoX5AlzmI5-yjoa6eNmkgXNNd1tJRpd9So5CEm1Oquozvz9eGuQQBvIgBKNJlA==');

    CREATE TABLE IF NOT EXISTS "gestor_escola" (
      "ges_id" SERIAL NOT NULL,
      "ges_identificador" VARCHAR(256) NOT NULL,
      "ges_primeiro_nome" VARCHAR(256) NOT NULL,
      "ges_segundo_nome" VARCHAR(256) NOT NULL,
      "ges_senha" VARCHAR(256) NOT NULL,
      "ges_ges_id" INTEGER NOT NULL,
      PRIMARY KEY ("ges_id"),
      CONSTRAINT "gestor_escola_gestor_gestor" FOREIGN KEY ("ges_ges_id") REFERENCES "gestor_admin" ("ges_adm_id") ON UPDATE NO ACTION ON DELETE NO ACTION
    );

    INSERT INTO "gestor_escola" ("ges_id", "ges_identificador", "ges_primeiro_nome", "ges_segundo_nome", "ges_senha", "ges_ges_id") VALUES
      (1, '999.999.999-99', 'João', 'Silva ', 'gAAAAABkaPztyZ5W2nWs6hW8U4bozfk-Ah4CsoX5AlzmI5-yjoa6eNmkgXNNd1tJRpd9So5CEm1Oquozvz9eGuQQBvIgBKNJlA==', 1),
      (2, '119.876.543-22', 'Pedro', 'Almeida', 'gAAAAABkaPztyZ5W2nWs6hW8U4bozfk-Ah4CsoX5AlzmI5-yjoa6eNmkgXNNd1tJRpd9So5CEm1Oquozvz9eGuQQBvIgBKNJlA==', 3),
      (3, '119.012.345-67', 'Maria', 'Santos ', 'gAAAAABkaPztyZ5W2nWs6hW8U4bozfk-Ah4CsoX5AlzmI5-yjoa6eNmkgXNNd1tJRpd9So5CEm1Oquozvz9eGuQQBvIgBKNJlA==', 2),
      (4, '119.012.345-68', 'Ana', 'Oliveira', 'gAAAAABkaPztyZ5W2nWs6hW8U4bozfk-Ah4CsoX5AlzmI5-yjoa6eNmkgXNNd1tJRpd9So5CEm1Oquozvz9eGuQQBvIgBKNJlA==', 1);

    CREATE TABLE IF NOT EXISTS "unidade_escolar" (
      "uni_id" SERIAL NOT NULL,
      "uni_codigo_inep" INTEGER NOT NULL,
      "uni_nome" VARCHAR(255) NOT NULL,
      "cat_esc" INTEGER NOT NULL,
      "tip_esc" INTEGER NOT NULL,
      "ges_id" INTEGER NOT NULL,
      "end_id" INTEGER NOT NULL,
      PRIMARY KEY ("uni_id"),
      CONSTRAINT "unidade_escolar_categoria_escola" FOREIGN KEY ("cat_esc") REFERENCES "categoria_escolar" ("cat_escola_id") ON UPDATE CASCADE ON DELETE RESTRICT,
      CONSTRAINT "unidade_escolar_endereco" FOREIGN KEY ("end_id") REFERENCES "endereco" ("end_id") ON UPDATE NO ACTION ON DELETE NO ACTION,
      CONSTRAINT "unidade_escolar_gestor_escola" FOREIGN KEY ("ges_id") REFERENCES "gestor_escola" ("ges_id") ON UPDATE NO ACTION ON DELETE NO ACTION,
      CONSTRAINT "unidade_escolar_tipo_escola" FOREIGN KEY ("tip_esc") REFERENCES "tipo_escola" ("tip_escola_id") ON UPDATE CASCADE ON DELETE RESTRICT
    );

    INSERT INTO "unidade_escolar" ("uni_id", "uni_codigo_inep", "uni_nome", "cat_esc", "tip_esc", "ges_id", "end_id") VALUES
      (1, 68779474, 'Escola Nascimento', 1, 3, 1, 1),
      (3, 89332709, 'Escola Estadual João Silva', 1, 2, 3, 6),
      (4, 94237178, 'Escola Municipal Maria Santos', 1, 3, 1, 5),
      (2, 73225631, 'Instituto Federal de Educação, Ciência e Tecnologia Pedro Almeida', 1, 1, 2, 7),
      (5, 55656452, 'Colégio Anglo', 2, 1, 4, 2),
      (6, 42569985, 'Escola Dom Bosco', 2, 3, 4, 3);

    CREATE TABLE IF NOT EXISTS "turma" (
      "tur_id" SERIAL NOT NULL,
      "tur_ano" INTEGER NOT NULL,
      "tur_ano_escolar" INTEGER NOT NULL,
      "uni_id" SERIAL NOT NULL,
      "pro_id" SERIAL NOT NULL,
      PRIMARY KEY ("tur_id"),
      CONSTRAINT "turma_professor" FOREIGN KEY ("pro_id") REFERENCES "professor" ("pro_id") ON UPDATE NO ACTION ON DELETE NO ACTION,
      CONSTRAINT "turma_unidade_escolar" FOREIGN KEY ("uni_id") REFERENCES "unidade_escolar" ("uni_id") ON UPDATE NO ACTION ON DELETE NO ACTION
    );

    INSERT INTO "turma" ("tur_id", "tur_ano_escolar", "tur_ano", "uni_id", "pro_id") VALUES
      (1, 1, 2022, 1, 1),
      (4, 2, 2022, 2, 4),
      (2, 2, 2022, 1, 3),
      (3, 1, 2022, 2, 2),
      (5, 1, 2022, 3, 5),
      (6, 2, 2022, 3, 6),
      (7, 1, 2022, 4, 7),
      (8, 2, 2022, 4, 8),
      (9, 1, 2023, 1, 1),
      (10, 2, 2023, 1, 3),
      (11, 1, 2023, 2, 2),
      (12, 2, 2023, 2, 4),
      (13, 1, 2023, 5, 9),
      (14, 1, 2023, 6, 10);

    CREATE TABLE IF NOT EXISTS "tipo_aluno" (
      "tip_alu_id" SERIAL NOT NULL,
      "tip_alu_desc" VARCHAR NOT NULL,
      PRIMARY KEY ("tip_alu_id")
    );

    INSERT INTO "tipo_aluno" ("tip_alu_id", "tip_alu_desc") VALUES
      (1, 'Normal'),
      (2, 'Especial'),
      (3, 'Superdotado');

    CREATE TABLE IF NOT EXISTS "aluno" (
      "alu_id" SERIAL NOT NULL,
      "alu_primeiro_nome" VARCHAR(255) NOT NULL,
      "alu_segundo_nome" VARCHAR(255) NOT NULL,
      "alu_data_nascimento" DATE NOT NULL,
      "tip_alu" SERIAL NOT NULL,
      "tur_id" SERIAL NOT NULL,
      PRIMARY KEY ("alu_id"),
      CONSTRAINT "aluno_tipo" FOREIGN KEY ("tip_alu") REFERENCES "tipo_aluno" ("tip_alu_id") ON UPDATE NO ACTION ON DELETE NO ACTION,
      CONSTRAINT "aluno_turma" FOREIGN KEY ("tur_id") REFERENCES "turma" ("tur_id") ON UPDATE NO ACTION ON DELETE NO ACTION
    );

    INSERT INTO "aluno" ("alu_id", "alu_primeiro_nome", "alu_segundo_nome", "alu_data_nascimento", "tip_alu", "tur_id") VALUES
      (1, 'Hasheem', 'Marzelo', '2017-05-24', 1, 1),
      (2, 'Iosep', 'Breens', '2018-03-15', 1, 5),
      (3, 'Matthias', 'Dan', '2017-06-09', 2, 2),
      (4, 'Annissa', 'McGraw', '2017-09-25', 3, 4),
      (5, 'Earle', 'Kencott', '2015-03-10', 3, 5),
      (6, 'Callean', 'Domerc', '2016-09-13', 2, 5),
      (7, 'Gerald', 'Heaney', '2016-08-19', 2, 4),
      (8, 'Bing', 'Berrecloth', '2017-03-06', 1, 4),
      (9, 'Orton', 'Philippson', '2017-01-18', 1, 1),
      (10, 'Celinda', 'Bachnic', '2015-07-13', 3, 2),
      (11, 'Archy', 'Commucci', '2018-06-08', 2, 1),
      (12, 'Glennis', 'Kierans', '2017-02-27', 1, 1),
      (13, 'Joey', 'Pinks', '2016-04-08', 1, 1),
      (14, 'Sawyer', 'Mathew', '2015-03-02', 1, 3),
      (15, 'Juliette', 'Grancher', '2015-04-30', 1, 5),
      (16, 'Roobbie', 'Keirl', '2018-09-27', 1, 5),
      (18, 'Lexy', 'Burge', '2017-01-19', 2, 3),
      (17, 'Briggs', 'Pocke', '2018-11-16', 1, 2),
      (19, 'Rivkah', 'Nickols', '2016-03-07', 1, 4),
      (20, 'Melisse', 'MacGille', '2016-11-30', 1, 5);

    CREATE TABLE IF NOT EXISTS "avaliacao" (
      "ava_id" SERIAL NOT NULL,
      "ava_data" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
      "ava_nota" NUMERIC(10,2) NULL DEFAULT NULL,
      "alu_id" SERIAL NOT NULL,
      "ava_tipo" INTEGER NOT NULL,
      PRIMARY KEY ("ava_id"),
      CONSTRAINT "avaliacao_aluno" FOREIGN KEY ("alu_id") REFERENCES "aluno" ("alu_id") ON UPDATE NO ACTION ON DELETE NO ACTION,
      CONSTRAINT "avaliacao_tipo" FOREIGN KEY ("ava_tipo") REFERENCES "tipo_avaliacao" ("tip_aval_id") ON UPDATE CASCADE ON DELETE RESTRICT
    );

    INSERT INTO "avaliacao" ("ava_id", "ava_data", "ava_nota", "alu_id", "ava_tipo") VALUES
      (1, '2022-03-01 14:59:39', 1.23, 1, 1),
      (2, '2022-03-02 14:59:55', 5.64, 1, 1),
      (3, '2022-03-03 15:00:11', 2.76, 1, 2),
      (4, '2022-03-04 15:00:26', 5.97, 1, 3),
      (5, '2022-04-01 15:01:44', 6.84, 2, 2),
      (6, '2022-05-01 15:02:30', 1.40, 3, 1),
      (15, '2022-07-21 15:05:20', 5.97, 15, 2),
      (13, '2022-07-07 15:04:45', 1.30, 7, 2),
      (14, '2022-07-20 15:05:00', 2.80, 15, 1),
      (12, '2022-07-07 15:04:24', 4.44, 6, 1),
      (11, '2022-07-01 15:04:08', 2.96, 8, 3),
      (10, '2022-06-06 15:03:56', 3.96, 10, 1),
      (9, '2022-06-01 15:03:38', 1.36, 11, 3),
      (8, '2022-05-01 15:03:01', 6.55, 3, 2),
      (7, '2022-04-02 15:01:58', 4.65, 2, 3);

    CREATE TABLE IF NOT EXISTS "coleta" (
      "col_id" SERIAL NOT NULL,
      "col_audio" VARCHAR(256) NOT NULL,
      "col_metrica" REAL NULL,
      "fra_id" SERIAL NOT NULL,
      "ava_id" SERIAL NOT NULL,
      PRIMARY KEY ("col_id"),
      CONSTRAINT "coleta_avaliacao" FOREIGN KEY ("ava_id") REFERENCES "avaliacao" ("ava_id") ON UPDATE NO ACTION ON DELETE NO ACTION,
      CONSTRAINT "coleta_frases" FOREIGN KEY ("fra_id") REFERENCES "frase" ("fra_id") ON UPDATE NO ACTION ON DELETE NO ACTION
    );

    INSERT INTO "coleta" ("col_id", "col_audio", "col_metrica", "fra_id", "ava_id") VALUES
      (1, '//servidor1/aluno1/audio01.mp3', 6.9, 1, 1),
      (2, '//servidor1/aluno1/audio02.mp3', 6.9, 2, 2),
      (3, '//servidor1/aluno1/audio03.mp3', 6.9, 3, 3),
      (4, '//servidor1/aluno1/audio04.mp3', 6.9, 4, 4),
      (5, '//servidor1/aluno2/audio01.mp3', 6.9, 1, 5),
      (6, '//servidor1/aluno2/audio02.mp3', 6.9, 2, 7),
      (7, '//servidor1/aluno3/audio01.mp3', 6.9, 5, 6),
      (68, '//servidor1/aluno3/audio02.mp3', 6.9, 7, 8),
      (79, '//servidor1/aluno11/audio01.mp3', 6.9, 9, 11),
      (91, '//servidor1/aluno10/audio01.mp3', 6.9, 6, 10);

    CREATE TABLE IF NOT EXISTS "contrato" (
      "con_id" SERIAL NOT NULL,
      "con_data_ini" DATE NOT NULL,
      "con_data_fim" DATE NOT NULL,
      "tip_contr" INTEGER NOT NULL,
      "uni_id" SERIAL NOT NULL,
      PRIMARY KEY ("con_id"),
      CONSTRAINT "contato_tipo_contrato" FOREIGN KEY ("tip_contr") REFERENCES "tipo_contrato" ("tip_contrato_id") ON UPDATE CASCADE ON DELETE RESTRICT,
      CONSTRAINT "contrato_unidade_escolar" FOREIGN KEY ("uni_id") REFERENCES "unidade_escolar" ("uni_id") ON UPDATE NO ACTION ON DELETE NO ACTION
    );

    INSERT INTO "contrato" ("con_id", "con_data_ini", "con_data_fim", "tip_contr", "uni_id") VALUES
      (1, '2022-01-01', '2023-01-01', 1, 1),
      (2, '2023-02-01', '2023-02-01', 2, 2),
      (3, '2021-01-01', '2025-01-01', 3, 5);

    BEGIN;
    SELECT setval(pg_get_serial_sequence('"tipo_aluno"','tip_alu_id'), coalesce(max("tip_alu_id"), 1), max("tip_alu_id") IS NOT null) FROM "tipo_aluno";
    SELECT setval(pg_get_serial_sequence('"tipo_escola"','tip_escola_id'), coalesce(max("tip_escola_id"), 1), max("tip_escola_id") IS NOT null) FROM "tipo_escola";
    SELECT setval(pg_get_serial_sequence('"tipo_frase"','tip_frase_id'), coalesce(max("tip_frase_id"), 1), max("tip_frase_id") IS NOT null) FROM "tipo_frase";
    SELECT setval(pg_get_serial_sequence('"tipo_avaliacao"','tip_aval_id'), coalesce(max("tip_aval_id"), 1), max("tip_aval_id") IS NOT null) FROM "tipo_avaliacao";
    SELECT setval(pg_get_serial_sequence('"frase"','fra_id'), coalesce(max("fra_id"), 1), max("fra_id") IS NOT null) FROM "frase";
    SELECT setval(pg_get_serial_sequence('"categoria_escolar"','cat_escola_id'), coalesce(max("cat_escola_id"), 1), max("cat_escola_id") IS NOT null) FROM "categoria_escolar";
    SELECT setval(pg_get_serial_sequence('"cidade"','cid_id'), coalesce(max("cid_id"), 1), max("cid_id") IS NOT null) FROM "cidade";
    SELECT setval(pg_get_serial_sequence('"endereco"','end_id'), coalesce(max("end_id"), 1), max("end_id") IS NOT null) FROM "endereco";
    SELECT setval(pg_get_serial_sequence('"professor"','pro_id'), coalesce(max("pro_id"), 1), max("pro_id") IS NOT null) FROM "professor";
    SELECT setval(pg_get_serial_sequence('"gestor_escola"','ges_id'), coalesce(max("ges_id"), 1), max("ges_id") IS NOT null) FROM "gestor_escola";
    SELECT setval(pg_get_serial_sequence('"unidade_escolar"','uni_id'), coalesce(max("uni_id"), 1), max("uni_id") IS NOT null) FROM "unidade_escolar";
    SELECT setval(pg_get_serial_sequence('"turma"','tur_id'), coalesce(max("tur_id"), 1), max("tur_id") IS NOT null) FROM "turma";
    SELECT setval(pg_get_serial_sequence('"aluno"','alu_id'), coalesce(max("alu_id"), 1), max("alu_id") IS NOT null) FROM "aluno";
    SELECT setval(pg_get_serial_sequence('"avaliacao"','ava_id'), coalesce(max("ava_id"), 1), max("ava_id") IS NOT null) FROM "avaliacao";
    SELECT setval(pg_get_serial_sequence('"coleta"','col_id'), coalesce(max("col_id"), 1), max("col_id") IS NOT null) FROM "coleta";
    COMMIT;

    CREATE VIEW view_alunos AS 
    SELECT al.alu_id,al.alu_primeiro_nome,al.alu_segundo_nome,
    al.alu_data_nascimento,pr.pro_primeiro_nome,pr.pro_segundo_nome, 
    tr.tur_ano,tr.tur_ano_escolar,ge.ges_identificador
    FROM aluno AS al 
    JOIN turma AS tr ON tr.tur_id = al.tur_id
    JOIN unidade_escolar AS ue ON ue.uni_id = tr.uni_id
    JOIN gestor_escola AS ge ON ge.ges_id = tr.uni_id
    JOIN tipo_aluno AS ta ON ta.tip_alu_id = al.tip_alu
    JOIN professor AS pr ON pr.pro_id = tr.pro_id;
    COMMIT;

    CREATE OR REPLACE FUNCTION update_nota_avaliacao()
    RETURNS trigger AS 
    'BEGIN
    UPDATE avaliacao SET ava_data = CURRENT_TIMESTAMP, ava_nota = (SELECT avg(col_metrica) FROM coleta WHERE ava_id = NEW.ava_id) WHERE ava_id = NEW.ava_id;
    RETURN NEW;
    END;'
    LANGUAGE plpgsql;

    CREATE TRIGGER coleta_trigger
    AFTER INSERT ON coleta
    FOR EACH ROW
    EXECUTE PROCEDURE update_nota_avaliacao();

    CREATE VIEW view_escolas AS 
    SELECT ue.uni_id,ue.uni_codigo_inep,ue.uni_nome,ce.cat_escola_desc,ed.end_rua,ed.end_numero,
    ed.end_cep,cd.cid_nome,cd.cid_uf,ge.ges_identificador,ge.ges_primeiro_nome,ge.ges_segundo_nome 
    FROM unidade_escolar AS ue
    JOIN tipo_escola AS te ON te.tip_escola_id = ue.tip_esc
    JOIN categoria_escolar AS ce ON ce.cat_escola_id = ue.cat_esc
    JOIN endereco AS ed ON ed.end_id = ue.end_id
    JOIN cidade AS cd ON cd.cid_id = ed.cid_id
    JOIN gestor_escola AS ge ON ge.ges_id = ue.ges_id;
    COMMIT;

    CREATE OR REPLACE FUNCTION update_escola()
    RETURNS trigger AS 
    'BEGIN
    UPDATE unidade_escolar SET uni_nome = trim(NEW.uni_nome) WHERE uni_id = NEW.uni_id;
    RETURN NEW;
    END;'
    LANGUAGE plpgsql;

    CREATE TRIGGER escola_trigger
    AFTER INSERT ON unidade_escolar
    FOR EACH ROW
    EXECUTE PROCEDURE update_escola();